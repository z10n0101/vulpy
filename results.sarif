{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Bandit",
          "organization": "PyCQA",
          "rules": [
            {
              "id": "B288",
              "name": "hardcoded_tmp_directory",
          "shortDescription": {
                "text": "Rule shortDescription"
              },
              "fullDescription": {
                "text": "Rule fullDescription"
              },
              "help": {
                "text": "RUle help"
              },
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-377",
                  "performance"
                ],
                "precision": "medium"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.7.8/plugins/B288_hardcoded_tmp_directory.html"
            },
            {
              "id": "B608",
              "name": "hardcoded_sql_expressions",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-89"
                ],
                "precision": "medium"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.7.8/plugins/b608_hardcoded_sql_expressions.html"
            },
            {
              "id": "B201",
              "name": "flask_debug_true",
              "properties": {
                "tags": [
                  "security",
                  "external/cwe/cwe-94"
                ],
                "precision": "medium"
              },
              "helpUri": "https://bandit.readthedocs.io/en/1.7.8/plugins/b201_flask_debug_true.html"
            }
          ],
          "version": "1.7.8",
          "semanticVersion": "1.7.8"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2024-07-29T09:10:13Z"
        }
      ],
      "properties": {
        "metrics": {
          "_totals": {
            "loc": 1556,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "SEVERITY.LOW": 9,
            "CONFIDENCE.LOW": 6,
            "SEVERITY.MEDIUM": 36,
            "CONFIDENCE.MEDIUM": 39,
            "SEVERITY.HIGH": 4,
            "CONFIDENCE.HIGH": 4
          },
          "bad/api_list.py": {
            "loc": 14,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 1,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/api_post.py": {
            "loc": 23,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 3,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 2,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "bad/brute.py": {
            "loc": 19,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 2,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 2
          },
          "bad/db.py": {
            "loc": 18,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "bad/db_init.py": {
            "loc": 32,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "bad/libapi.py": {
            "loc": 22,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 3,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 3,
            "CONFIDENCE.HIGH": 0
          },
          "bad/libmfa.py": {
            "loc": 55,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/libposts.py": {
            "loc": 18,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/libsession.py": {
            "loc": 20,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 1,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 1
          },
          "bad/libuser.py": {
            "loc": 38,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 3,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 3,
            "CONFIDENCE.HIGH": 0
          },
          "bad/mod_api.py": {
            "loc": 50,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/mod_csp.py": {
            "loc": 5,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/mod_hello.py": {
            "loc": 5,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/mod_mfa.py": {
            "loc": 42,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/mod_posts.py": {
            "loc": 23,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/mod_user.py": {
            "loc": 51,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "bad/vulpy-ssl.py": {
            "loc": 19,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 1,
            "SEVERITY.MEDIUM": 2,
            "SEVERITY.HIGH": 1,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 4,
            "CONFIDENCE.HIGH": 0
          },
          "bad/vulpy.py": {
            "loc": 41,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 1,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 1,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 2,
            "CONFIDENCE.HIGH": 0
          },
          "good/cutpasswd.py": {
            "loc": 13,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "good/db_init.py": {
            "loc": 33,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/httpbrute.py": {
            "loc": 19,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 1,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/libapi.py": {
            "loc": 37,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 1,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "good/libmfa.py": {
            "loc": 55,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/libposts.py": {
            "loc": 18,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/libsession.py": {
            "loc": 39,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 1,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 1
          },
          "good/libuser.py": {
            "loc": 90,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "good/mod_api.py": {
            "loc": 47,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/mod_csp.py": {
            "loc": 5,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/mod_hello.py": {
            "loc": 5,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/mod_mfa.py": {
            "loc": 47,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/mod_posts.py": {
            "loc": 23,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/mod_user.py": {
            "loc": 58,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/mod_welcome1.py": {
            "loc": 19,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "good/vulpy-ssl.py": {
            "loc": 19,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 1,
            "SEVERITY.MEDIUM": 2,
            "SEVERITY.HIGH": 1,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 4,
            "CONFIDENCE.HIGH": 0
          },
          "good/vulpy.py": {
            "loc": 40,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 1,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 1,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 2,
            "CONFIDENCE.HIGH": 0
          },
          "utils/aes-decrypt.py": {
            "loc": 20,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/aes-encrypt.py": {
            "loc": 21,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/ca-create.py": {
            "loc": 43,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 3,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 3,
            "CONFIDENCE.HIGH": 0
          },
          "utils/ca-csr-create.py": {
            "loc": 26,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 2,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 2,
            "CONFIDENCE.HIGH": 0
          },
          "utils/ca-csr-load.py": {
            "loc": 27,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 4,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 4,
            "CONFIDENCE.HIGH": 0
          },
          "utils/crack-cvv.py": {
            "loc": 15,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/crack-hash.py": {
            "loc": 15,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/fernet-generate-key.py": {
            "loc": 3,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/generate_bad_passwords.py": {
            "loc": 29,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 1,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/hashfile.py": {
            "loc": 14,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/hmac_generate.py": {
            "loc": 13,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/httpbrute.py": {
            "loc": 24,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 1,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/luncheck.py": {
            "loc": 13,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/rsa-decrypt.py": {
            "loc": 21,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "utils/rsa-encrypt.py": {
            "loc": 20,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "utils/rsa-keygen.py": {
            "loc": 23,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 2,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 2,
            "CONFIDENCE.HIGH": 0
          },
          "utils/rsa-sign.py": {
            "loc": 27,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "utils/rsa-verify.py": {
            "loc": 31,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "utils/scrypt-crack.py": {
            "loc": 36,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/scrypt-generate.py": {
            "loc": 23,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/scrypt-verify.py": {
            "loc": 28,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "utils/skey.py": {
            "loc": 22,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          }
        }
      },
      "results": [
        {
         "message": {
            "text": "README.rst",
            "markdown": "[README](bad/api_post.py)\n[README](README.rst)\n[README](https://github.com/z10n0101/vulpy/blob/master/README.rst)\n[README](file://README.md)"
          },
          
"locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "api_key_file = Path('/tmp/supersecret.txt')\n"
                  },
                  "endColumn": 43,
                  "endLine": 6,
                  "startColumn": 21,
                  "startLine": 6
                },
                "artifactLocation": {
                  "uri": "bad/api_post.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napi_key_file = Path('/tmp/supersecret.txt')\n\n"
                  },
                  "endLine": 7,
                  "startLine": 5
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "Fix this issue by performing steps X, Y, and Z."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "bad/api_post.py"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "startLine": 6
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Possible SQL injection vector through string-based query construction."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        c.execute(\"INSERT INTO users (user, password, failures) VALUES ('%s', '%s', '%d')\" %(u, p, 0))\n"
                  },
                  "endColumn": 91,
                  "endLine": 19,
                  "startColumn": 19,
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "bad/db.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    for u,p in users:\n        c.execute(\"INSERT INTO users (user, password, failures) VALUES ('%s', '%s', '%d')\" %(u, p, 0))\n\n"
                  },
                  "endLine": 20,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B608",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Possible SQL injection vector through string-based query construction."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        c.execute(\"INSERT INTO users (username, password, failures, mfa_enabled, mfa_secret) VALUES ('%s', '%s', '%d', '%d', '%s')\" %(u, p, 0, 0, ''))\n"
                  },
                  "endColumn": 132,
                  "endLine": 20,
                  "startColumn": 19,
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "bad/db_init.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    for u,p in users:\n        c.execute(\"INSERT INTO users (username, password, failures, mfa_enabled, mfa_secret) VALUES ('%s', '%s', '%d', '%d', '%s')\" %(u, p, 0, 0, ''))\n\n"
                  },
                  "endLine": 21,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B608",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    for f in Path('/tmp/').glob('vulpy.apikey.' + username + '.*'):\n"
                  },
                  "endColumn": 26,
                  "endLine": 16,
                  "startColumn": 19,
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "bad/libapi.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n    for f in Path('/tmp/').glob('vulpy.apikey.' + username + '.*'):\n        print('removing', f)\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    keyfile = '/tmp/vulpy.apikey.{}.{}'.format(username, key)\n"
                  },
                  "endColumn": 40,
                  "endLine": 20,
                  "startColumn": 15,
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "bad/libapi.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n    keyfile = '/tmp/vulpy.apikey.{}.{}'.format(username, key)\n\n"
                  },
                  "endLine": 21,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    for f in Path('/tmp/').glob('vulpy.apikey.*.' + key):\n"
                  },
                  "endColumn": 26,
                  "endLine": 33,
                  "startColumn": 19,
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "bad/libapi.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n    for f in Path('/tmp/').glob('vulpy.apikey.*.' + key):\n        return f.name.split('.')[2]\n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Possible SQL injection vector through string-based query construction."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    user = c.execute(\"SELECT * FROM users WHERE username = '{}' and password = '{}'\".format(username, password)).fetchone()\n"
                  },
                  "endColumn": 85,
                  "endLine": 12,
                  "startColumn": 22,
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "bad/libuser.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n    user = c.execute(\"SELECT * FROM users WHERE username = '{}' and password = '{}'\".format(username, password)).fetchone()\n\n"
                  },
                  "endLine": 13,
                  "startLine": 11
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B608",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Possible SQL injection vector through string-based query construction."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    c.execute(\"INSERT INTO users (username, password, failures, mfa_enabled, mfa_secret) VALUES ('%s', '%s', '%d', '%d', '%s')\" %(username, password, 0, 0, ''))\n"
                  },
                  "endColumn": 128,
                  "endLine": 25,
                  "startColumn": 15,
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "bad/libuser.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n    c.execute(\"INSERT INTO users (username, password, failures, mfa_enabled, mfa_secret) VALUES ('%s', '%s', '%d', '%d', '%s')\" %(username, password, 0, 0, ''))\n\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B608",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Possible SQL injection vector through string-based query construction."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    c.execute(\"UPDATE users SET password = '{}' WHERE username = '{}'\".format(password, username))\n"
                  },
                  "endColumn": 71,
                  "endLine": 53,
                  "startColumn": 15,
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "bad/libuser.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\n    c.execute(\"UPDATE users SET password = '{}' WHERE username = '{}'\".format(password, username))\n    conn.commit()\n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B608",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endColumn": 87,
                  "endLine": 29,
                  "startColumn": 1,
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "bad/vulpy-ssl.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napp.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endLine": 29,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "ruleId": "B201",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endColumn": 68,
                  "endLine": 29,
                  "startColumn": 52,
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "bad/vulpy-ssl.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napp.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endLine": 29,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endColumn": 85,
                  "endLine": 29,
                  "startColumn": 70,
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "bad/vulpy-ssl.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napp.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endLine": 29,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.run(debug=True, host='127.0.1.1', port=5000, extra_files='csp.txt')\n"
                  },
                  "endColumn": 72,
                  "endLine": 55,
                  "startColumn": 1,
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "bad/vulpy.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napp.run(debug=True, host='127.0.1.1', port=5000, extra_files='csp.txt')\n"
                  },
                  "endLine": 55,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "ruleId": "B201",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open('/tmp/darkweb2017-top10000.txt') as f:\n"
                  },
                  "endColumn": 42,
                  "endLine": 3,
                  "startColumn": 11,
                  "startLine": 3
                },
                "artifactLocation": {
                  "uri": "good/cutpasswd.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open('/tmp/darkweb2017-top10000.txt') as f:\n    for password in f.readlines():\n"
                  },
                  "endLine": 4,
                  "startLine": 2
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Possible SQL injection vector through string-based query construction."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    c.execute(\"INSERT INTO users (username, password, salt, failures, mfa_enabled, mfa_secret) VALUES ('%s', '%s', '%s', '%d', '%d', '%s')\" %(username, '', '', 0, 0, ''))\n"
                  },
                  "endColumn": 140,
                  "endLine": 61,
                  "startColumn": 15,
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "good/libuser.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    c = conn.cursor()\n    c.execute(\"INSERT INTO users (username, password, salt, failures, mfa_enabled, mfa_secret) VALUES ('%s', '%s', '%s', '%d', '%d', '%s')\" %(username, '', '', 0, 0, ''))\n    conn.commit()\n"
                  },
                  "endLine": 62,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B608",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endColumn": 87,
                  "endLine": 29,
                  "startColumn": 1,
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "good/vulpy-ssl.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napp.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endLine": 29,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "ruleId": "B201",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endColumn": 68,
                  "endLine": 29,
                  "startColumn": 52,
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "good/vulpy-ssl.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napp.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endLine": 29,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endColumn": 85,
                  "endLine": 29,
                  "startColumn": 70,
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "good/vulpy-ssl.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napp.run(debug=True, host='127.0.1.1', ssl_context=('/tmp/acme.cert', '/tmp/acme.key'))\n"
                  },
                  "endLine": 29,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code."
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "app.run(debug=True, host='127.0.1.1', port=5001, extra_files='csp.txt')\n"
                  },
                  "endColumn": 72,
                  "endLine": 53,
                  "startColumn": 1,
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "good/vulpy.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\napp.run(debug=True, host='127.0.1.1', port=5001, extra_files='csp.txt')\n\n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "HIGH"
          },
          "ruleId": "B201",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open('/tmp/ca.key', 'wb') as out:\n"
                  },
                  "endColumn": 24,
                  "endLine": 31,
                  "startColumn": 11,
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "utils/ca-create.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open('/tmp/ca.key', 'wb') as out:\n    out.write(pem_private)\n"
                  },
                  "endLine": 32,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open('/tmp/ca.pub', 'wb') as out:\n"
                  },
                  "endColumn": 24,
                  "endLine": 34,
                  "startColumn": 11,
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "utils/ca-create.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open('/tmp/ca.pub', 'wb') as out:\n    out.write(pem_public)\n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open('/tmp/ca.cert', 'wb') as out:\n"
                  },
                  "endColumn": 25,
                  "endLine": 58,
                  "startColumn": 11,
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "utils/ca-create.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "# Write our certificate out to disk.\nwith open('/tmp/ca.cert', 'wb') as out:\n    out.write(cert.public_bytes(serialization.Encoding.PEM))\n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/acme.key\", \"rb\") as key_file:\n"
                  },
                  "endColumn": 26,
                  "endLine": 12,
                  "startColumn": 11,
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "utils/ca-csr-create.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open(\"/tmp/acme.key\", \"rb\") as key_file:\n    private_key = serialization.load_pem_private_key(\n"
                  },
                  "endLine": 13,
                  "startLine": 11
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/acme.csr\", \"wb\") as out:\n"
                  },
                  "endColumn": 26,
                  "endLine": 35,
                  "startColumn": 11,
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "utils/ca-csr-create.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "# Write our CSR out to disk.\nwith open(\"/tmp/acme.csr\", \"wb\") as out:\n    out.write(csr.public_bytes(serialization.Encoding.PEM))\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/ca.cert\", \"rb\") as ca_cert_file:\n"
                  },
                  "endColumn": 25,
                  "endLine": 13,
                  "startColumn": 11,
                  "startLine": 13
                },
                "artifactLocation": {
                  "uri": "utils/ca-csr-load.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open(\"/tmp/ca.cert\", \"rb\") as ca_cert_file:\n    ca_cert = x509.load_pem_x509_certificate(ca_cert_file.read(), default_backend())\n"
                  },
                  "endLine": 14,
                  "startLine": 12
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/acme.csr\", \"rb\") as csr_file:\n"
                  },
                  "endColumn": 26,
                  "endLine": 16,
                  "startColumn": 11,
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "utils/ca-csr-load.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open(\"/tmp/acme.csr\", \"rb\") as csr_file:\n    csr = x509.load_pem_x509_csr(csr_file.read(), default_backend())\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/ca.key\", \"rb\") as key_file:\n"
                  },
                  "endColumn": 24,
                  "endLine": 19,
                  "startColumn": 11,
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "utils/ca-csr-load.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open(\"/tmp/ca.key\", \"rb\") as key_file:\n    private_key = serialization.load_pem_private_key(\n"
                  },
                  "endLine": 20,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open('/tmp/acme.cert', 'wb') as out:\n"
                  },
                  "endColumn": 27,
                  "endLine": 35,
                  "startColumn": 11,
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "utils/ca-csr-load.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "# Write our certificate out to disk.\nwith open('/tmp/acme.cert', 'wb') as out:\n    out.write(cert.public_bytes(serialization.Encoding.PEM))\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/acme.key\", \"rb\") as key_file:\n"
                  },
                  "endColumn": 26,
                  "endLine": 14,
                  "startColumn": 11,
                  "startLine": 14
                },
                "artifactLocation": {
                  "uri": "utils/rsa-decrypt.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open(\"/tmp/acme.key\", \"rb\") as key_file:\n    private_key = serialization.load_pem_private_key(\n"
                  },
                  "endLine": 15,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/acme.pub\", \"rb\") as key_file:\n"
                  },
                  "endColumn": 26,
                  "endLine": 14,
                  "startColumn": 11,
                  "startLine": 14
                },
                "artifactLocation": {
                  "uri": "utils/rsa-encrypt.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open(\"/tmp/acme.pub\", \"rb\") as key_file:\n    public_key = serialization.load_pem_public_key(\n"
                  },
                  "endLine": 15,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open('/tmp/acme.key', 'wb') as out:\n"
                  },
                  "endColumn": 26,
                  "endLine": 26,
                  "startColumn": 11,
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "utils/rsa-keygen.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open('/tmp/acme.key', 'wb') as out:\n    out.write(pem_private)\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open('/tmp/acme.pub', 'wb') as out:\n"
                  },
                  "endColumn": 26,
                  "endLine": 29,
                  "startColumn": 11,
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "utils/rsa-keygen.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open('/tmp/acme.pub', 'wb') as out:\n    out.write(pem_public)\n"
                  },
                  "endLine": 30,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/acme.key\", \"rb\") as key_file:\n"
                  },
                  "endColumn": 26,
                  "endLine": 15,
                  "startColumn": 11,
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "utils/rsa-sign.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open(\"/tmp/acme.key\", \"rb\") as key_file:\n    private_key = serialization.load_pem_private_key(\n"
                  },
                  "endLine": 16,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Probable insecure usage of temp file/directory."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "with open(\"/tmp/acme.pub\", \"rb\") as key_file:\n"
                  },
                  "endColumn": 26,
                  "endLine": 16,
                  "startColumn": 11,
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "utils/rsa-verify.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "\nwith open(\"/tmp/acme.pub\", \"rb\") as key_file:\n    public_key = serialization.load_pem_public_key(\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B288",
          "ruleIndex": 0
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json"
}
